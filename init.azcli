#!/bin/bash

# Based on: https://docs.microsoft.com/en-us/azure/private-link/create-private-endpoint-cli
# Using Azure CLI 2.0.74

RESOURCEGROUP="Group-Webapp-SQL-Private-Link"
LOCATION="westeurope"

PIP_NATGW_NAME="pip-nat-gw"
NAT_GW_NAME="nat-gw"
FW_NAME="fw-privatelink"
ROUTETABLE_NAME="rt-webapp"

VNET_NAME="vnet-webapp-sql-private-link"
VNET_IPRANGE="10.0.0.0/8"

FW_SUBNET_NAME="AzureFirewallSubnet"
FW_SUBNET_IPRANGE="10.0.0.0/24"

SQL_SUBNET_NAME="subnet-sql"
SQL_SUBNET_IPRANGE="10.0.1.0/24"

WEBAPP_SUBNET_NAME="subnet-webapp"
WEBAPP_SUBNET_IPRANGE="10.0.5.0/24"

APPSERVICE_PLAN_NAME="asp-web-azure-sql-private-link"
WEBAPP_NAME="web-azure-sql-private-link"

SQLSERVER_NAME="sql-private-link-test"
SQL_ADMINUSER="sqladmin1"
SQL_ADMINPASSWORD="do_not_commit_p4$$words_to_git"
DB_NAME="db-sample"
PRIVATE_ENDPOINT_NAME="sql-endpoint"
SQL_CONNECTION_NAME="sql-connection"

VM_PIP_NAME="pip-vm-ubuntu"
VM_SUBNET_NAME="subnet-vm"
VM_SUBNET_IPRANGE="10.0.10.0/24"
VM_NAME="vm-ubuntuhost"

#Create Resource group
az group create \
    --name $RESOURCEGROUP \
    --location $LOCATION

# Create VNET
az network vnet create \
    --name $VNET_NAME \
    --resource-group $RESOURCEGROUP \
    --address-prefix $VNET_IPRANGE

#Setup NAT GW PIP
az network public-ip create \
    --name $PIP_NATGW_NAME \
    --resource-group $RESOURCEGROUP \
    --location $LOCATION \
    --sku Standard

# Setup NAT GW
az network nat gateway create \
    --resource-group $RESOURCEGROUP \
    --name $NAT_GW_NAME \
    --location $LOCATION \
    --public-ip-addresses $PIP_NATGW_NAME 

# Create route table
az network route-table create \
    --name $ROUTETABLE_NAME \
    --resource-group $RESOURCEGROUP \
    --location $LOCATION

# Add default route via firewall to route table
az network route-table route create \
    --address-prefix 0.0.0.0/0 \
    --next-hop-type VirtualAppliance \
    --name Internet \
    --route-table-name $ROUTETABLE_NAME \
    --resource-group $RESOURCEGROUP \
    --next-hop-ip-address 10.0.0.4

# Create Subnet for Azure FW
az network vnet subnet create \
    --name AzureFirewallSubnet \
    --vnet-name $VNET_NAME \
    --resource-group $RESOURCEGROUP \
    --address-prefixes $FW_SUBNET_IPRANGE

# Create Subnet for Webapp (Cannot use NAT GW)
az network vnet subnet create \
    --name $WEBAPP_SUBNET_NAME \
    --vnet-name $VNET_NAME \
    --resource-group $RESOURCEGROUP \
    --address-prefixes $WEBAPP_SUBNET_IPRANGE \
    --route-table $ROUTETABLE_NAME

# Create Subnet for SQL Azure
az network vnet subnet create \
    --name $SQL_SUBNET_NAME \
    --vnet-name $VNET_NAME \
    --resource-group $RESOURCEGROUP \
    --address-prefixes $SQL_SUBNET_IPRANGE \
    --nat-gateway $NAT_GW_NAME

# Create Subnet for VM
az network vnet subnet create \
    --name $VM_SUBNET_NAME \
    --vnet-name $VNET_NAME \
    --resource-group $RESOURCEGROUP \
    --address-prefixes $VM_SUBNET_IPRANGE \
    --nat-gateway $NAT_GW_NAME

# Disable subnet private endpoint policies 
az network vnet subnet update \
    --name $SQL_SUBNET_NAME \
    --resource-group $RESOURCEGROUP \
    --vnet-name $VNET_NAME \
    --disable-private-endpoint-network-policies true

# Create Azure Firewall for SNAT of Webapp
az network firewall create \
    --name $FW_NAME \
    --resource-group $RESOURCEGROUP \
    --location $LOCATION \
    --vnet-name $VNET_NAME

# Create Azure Firewall rule
az network firewall application-rule create \
    --collection-name outbound-internet \
    --firewall-name $FW_NAME \
    --name internet \
    --protocols Https=443 \
    --resource-group $RESOURCEGROUP \
    --action Allow \
    --priority 100 \
    --source-addresses $WEBAPP_SUBNET_IPRANGE \
    --target-fqdns "ipinfo.io"

# Create an App service plan
az appservice plan create \
    --name $APPSERVICE_PLAN_NAME \
    --resource-group $RESOURCEGROUP \
    --sku s1

 # Create a Webapp
 az webapp create \
  --resource-group $RESOURCEGROUP \
  --name $WEBAPP_NAME \
  --plan $APPSERVICE_PLAN_NAME

# Configure routing for webapp
az webapp config appsettings set \
    --resource-group $RESOURCEGROUP \
    --name $WEBAPP_NAME \
    --settings WEBSITE_VNET_ROUTE_ALL=1

# Add VNet integration to webapp
az webapp vnet-integration add \
    --resource-group $RESOURCEGROUP \
    --name $WEBAPP_NAME \
    --vnet $VNET_NAME \
    --subnet $WEBAPP_SUBNET_NAME

# Create Azure SQL Server
az sql server create \
    --name $SQLSERVER_NAME \
    --resource-group $RESOURCEGROUP \
    --location $LOCATION \
    --admin-user $SQL_ADMINUSER \
    --admin-password $SQL_ADMINPASSWORD 

# Create a sample database
az sql db create \
    --resource-group $RESOURCEGROUP \
    --server $SQLSERVER_NAME \
    --name $DB_NAME \
    --sample-name AdventureWorksLT \
    --edition GeneralPurpose \
    --family Gen4 \
    --capacity 1 

SQL_SERVER_ID=$(az sql server list --query "[?name=='$SQLSERVER_NAME'].id" -o tsv)

# Create the Private endpoint
az network private-endpoint create \
    --name $PRIVATE_ENDPOINT_NAME \
    --resource-group $RESOURCEGROUP \
    --vnet-name $VNET_NAME \
    --subnet $SQL_SUBNET_NAME \
    --private-connection-resource-id $SQL_SERVER_ID \
    --group-ids sqlServer \
    --connection-name $SQL_CONNECTION_NAME  

#Setup NAT GW PIP
az network public-ip create \
    --name $VM_PIP_NAME \
    --resource-group $RESOURCEGROUP \
    --location $LOCATION \
    --sku Standard

# Create a Test VM
az vm create \
    --name $VM_NAME \
    --resource-group $RESOURCEGROUP \
    --subnet $VM_SUBNET_NAME \
    --vnet-name $VNET_NAME \
    --image UbuntuLTS \
    --public-ip-address $VM_PIP_NAME \
    --generate-ssh-keys





# Delete resource group
echo "Deleting ResourceGroup: $RESOURCEGROUP"
az group delete --resource-group $RESOURCEGROUP